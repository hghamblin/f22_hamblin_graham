[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Posts",
    "section": "",
    "text": "Python\n\n\nAPI\n\n\nYouTube\n\n\nTutorial\n\n\nGitHub Actions\n\n\n\n\n\n\n\n\n\n\n\nSep 19, 2022\n\n\nGraham Hamblin\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/youtube-api.html",
    "href": "posts/youtube-api.html",
    "title": "Getting Started with the YouTube API",
    "section": "",
    "text": "Google API Client\nTo get started, we must import the client and provide the following information:\n\nserviceName: where are we requesting information from?\nversion: v3 is the most up-to-date as of publishing\ndeveloperKey: this is string of characters from before\n\nimport googleapiclient.discovery\n\nyoutube = googleapiclient.discovery.build(\n    serviceName = \"youtube\",\n    version = \"v3\", \n    developerKey = API_KEY # use your credentials from before\n)\n\n\nMaking Requests\nThere are only two required parameters when requesting comments from the YouTube API:\n\npart:\n\n\"snippet\": details about the comment (author, likes, etc.)\n\"id\": unique identifier for the comment\n\nid or parentID: ID for the video or parent comment for which we would like responses.\n\nFor this example, we will be requesting the \"snippet\" (details) for comments on a specified video.\nI’ll be using the following video by 3Blue1Brown, though the process will be identical if you would like to follow along with another video.\n  \nLet’s take a look at the URL for this video:\n\\[\n    \\text{https://www.youtube.com/watch?v=}\\underbrace{\\text{8idr1WZ1A7Q}}_\\text{Video ID}\n\\]\nWhile we could easily copy the video ID from the URL and paste it directly into our code, I plan to automate this process for a number of videos and would save time by putting this into code.\nLet’s take the URL of our selected video and extract the ID using the split() function.\n# URL of the selected video\nvideo_url = \"https://www.youtube.com/watch?v=8idr1WZ1A7Q\"\n\n# extracts the ID from the given URL\nvideo_id = video_url.split(\"watch?v=\")[1]\nNow we have everything we need to define our request. The following code uses our API client from before to request comments from the YouTube video we selected above.\nrequest = youtube.commentThreads().list(\n    part = \"snippet\",  \n    videoId = video_id\n)\nThe request is then processed as follows\nrequest.execute()[\"items\"]\n\n\nInterpreting Responses\nAfter processing the request, the API returns a list of elements in the following structure.\n{\n    'kind': 'youtube#commentThread',\n    'etag': 'CWbEkHqHXRtzPDpMF8Oiy-IJ2i4',\n    'id': 'Ugx5qRkWFxUWVad4dNF4AaABAg',\n    'snippet': {\n        'videoId': '8idr1WZ1A7Q',\n        'topLevelComment': {\n            'kind': 'youtube#comment',\n            'etag': 'LeBHFSGXBuJ9_wl3QGeF04Qc714',\n            'id': 'Ugx5qRkWFxUWVad4dNF4AaABAg',\n            'snippet': {\n                'videoId': '8idr1WZ1A7Q',\n                'textDisplay': '<a href=\"https://www.youtube.com/watch?v=8idr1WZ1A7Q&amp;t=5m30s\">5:30</a> Nikola lol',\n                'textOriginal': '5:30 Nikola lol',\n                'authorDisplayName': 'A Human',\n                'authorProfileImageUrl': 'https://yt3.ggpht.com/eXPf7FrnH0vv0zrcl8foRNtYC3fFb1Kmjb-N528k00lLOk21sNbBBxTsY4q3ZhrvAXGDYt25NjE=s48-c-k-c0x00ffffff-no-rj',\n                'authorChannelUrl': 'http://www.youtube.com/channel/UCfRur4T6f8Lb3_STxB8AotQ',\n                'authorChannelId': {\n                    'value': 'UCfRur4T6f8Lb3_STxB8AotQ'\n                },\n                'canRate': True,\n                'viewerRating': 'none',\n                'likeCount': 0,\n                'publishedAt': '2022-09-13T03:04:25Z',\n                'updatedAt': '2022-09-13T03:04:25Z'\n            }\n        },\n        'canReply': True,\n        'totalReplyCount': 0,\n        'isPublic': True\n    }\n}\nWe can load the response into a pandas dataframe\nLet’s take a look at the first few rows of our data.\n\n\n\n\n\n\n\n\n\n\nauthorDisplayName\ntextOriginal\nlikeCount\n\n\n\n\n0\nA Human\n5:30 Nikola lol\n0\n\n\n1\nFarzad Shirazifard\nplease part 3?\n0\n\n\n2\ndarci peeps\nCan we do something similar for 5 star systems?\n0\n\n\n3\nMagget_\nThe hyperprobability of this man pulling any bitches is less than zero\n1\n\n\n4\nRaj Tanwar\nThis has to be the best visual explanations for Binomial distributions.\n0"
  }
]